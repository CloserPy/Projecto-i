CREATE DATABASE ARRIENDO_MAQUINARIAS
USE ARRIENDO_MAQUINARIAS

CREATE TABLE TIPO_CLIENTE(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(25) NOT NULL,
DESCRIPCION TEXT   --OPCIONAL
);

CREATE TABLE CLIENTE(
RUT VARCHAR(12) PRIMARY KEY,
NOMBRE VARCHAR(75) NOT NULL,
TELEFONO INT NOT NULL,
DIRECCION TEXT NOT NULL,
ID_TIPO INT NOT NULL,
FOREIGN KEY (ID_TIPO) REFERENCES TIPO_CLIENTE(ID)
);

CREATE TABLE ESTADO_FACTURA(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(30) NOT NULL,
DESCRIPCION TEXT
);

CREATE TABLE FACTURA(
ID INT PRIMARY KEY IDENTITY,
BRUTO DECIMAL NOT NULL,
DESCUENTO DECIMAL,
NETO DECIMAL NOT NULL,
IVA DECIMAL NOT NULL,
TOTAL DECIMAL NOT NULL,
FECHA_EMISION DATETIME NOT NULL,
FECHA_EXPIRACION DATE NOT NULL,
ID_ESTADO INT NOT NULL DEFAULT 1,
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_FACTURA(ID)
);

CREATE TABLE TIPO_MANTENCION(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(30) NOT NULL,
DESCRIPCION TEXT
);

CREATE TABLE ESTADO_PRODUCTO(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(30) NOT NULL
);

CREATE TABLE TIPO_PRODUCTO(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(30) NOT NULL
);

CREATE TABLE PRODUCTO(
NUM_SERIE INT PRIMARY KEY,
NOMBRE VARCHAR(75) NOT NULL,
VALOR DECIMAL NOT NULL,
VIDA_UTIL INT NOT NULL,
FECHA_ADQ DATE NOT NULL,
VALOR_RESIDUAL DECIMAL NOT NULL,
ID_ESTADO INT NOT NULL DEFAULT 1,
ID_TIPO INT NOT NULL,
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_PRODUCTO(ID),
FOREIGN KEY (ID_TIPO) REFERENCES TIPO_PRODUCTO(ID)
);

CREATE TABLE ESTADO_MANTENIMIENTO(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(30) NOT NULL
);

CREATE TABLE MANTENIMIENTO(
ID INT PRIMARY KEY IDENTITY,
INICIO DATE NOT NULL,
TERMINO DATE NOT NULL,
COSTO DECIMAL NOT NULL,
ID_PRODUCTO INT NOT NULL,
ID_TIPO INT NOT NULL,
ID_ESTADO INT NOT NULL,
FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(NUM_SERIE),
FOREIGN KEY (ID_TIPO) REFERENCES TIPO_MANTENCION(ID),
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_MANTENIMIENTO(ID)
);

CREATE TABLE ESTADO_ARRIENDO(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(30) NOT NULL
);

CREATE TABLE ARRIENDO(
ID INT PRIMARY KEY IDENTITY,
INICIO DATE NOT NULL,
TERMINO DATE NOT NULL,
VALOR DECIMAL NOT NULL,
ID_PRODUCTO INT NOT NULL,
ID_CLIENTE VARCHAR(12) NOT NULL,
ID_ESTADO INT NOT NULL DEFAULT 1,
ID_FACTURA INT,
FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(NUM_SERIE),
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(RUT),
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_ARRIENDO(ID),
FOREIGN KEY (ID_FACTURA) REFERENCES FACTURA(ID)
); 

CREATE TABLE DEVOLUCION(
ID INT PRIMARY KEY IDENTITY,
FECHA DATETIME NOT NULL,
ID_ARRIENDO INT NOT NULL,
FOREIGN KEY(ID_ARRIENDO) REFERENCES ARRIENDO(ID)
);

CREATE TABLE USUARIO(
ID INT PRIMARY KEY IDENTITY,
NOMBRE VARCHAR(25) NOT NULL,
PASS VARCHAR(25) NOT NULL
);

--------------------------------------
USE ARRIENDO_MAQUINARIAS
INSERT INTO TIPO_CLIENTE VALUES(1,'EMPRESA','DESCRIPCION1')
INSERT INTO TIPO_CLIENTE VALUES(2,'PERSONA PARTICULAR','DESCRIPCION2')

INSERT INTO TIPO_PRODUCTO VALUES(1,'MAQUINARIA PESADA')
INSERT INTO TIPO_PRODUCTO VALUES(2,'MAQUINARIA LIGERA')

INSERT INTO TIPO_MANTENCION VALUES(1,'DE RUTINA','PARA PREVENIR AVERIAS')
INSERT INTO TIPO_MANTENCION VALUES(2,'DE EMERGENCIA','PARA REPARAR')

INSERT INTO ESTADO_MANTENIMIENTO VALUES(1,'PENDIENTE')
INSERT INTO ESTADO_MANTENIMIENTO VALUES(2,'ACTIVO')
INSERT INTO ESTADO_MANTENIMIENTO VALUES(3,'FINALIZADO')

INSERT INTO ESTADO_PRODUCTO VALUES(1,'DISPONIBLE')
INSERT INTO ESTADO_PRODUCTO VALUES(2,'EN MANTENCION')
INSERT INTO ESTADO_PRODUCTO VALUES(3,'EN OBRA')

INSERT INTO ESTADO_FACTURA VALUES(1,'PENDIENTE','SE ENCUENTRA DENTRO DEL PLAZO ESTIPULADO')
INSERT INTO ESTADO_FACTURA VALUES(2,'PAGADA','EL CLIENTE YA EFECTUO EL PAGO POR LO SERVICIOS')

INSERT INTO ESTADO_ARRIENDO VALUES(1,'PENDIENTE')
INSERT INTO ESTADO_ARRIENDO VALUES(2,'FACTURADA')

INSERT INTO USUARIO VALUES('ADMIN','ADMIN')

-------------------------------------------------
---------------TRIGGERS--------------------------

USE ARRIENDO_MAQUINARIAS
--mantenimiento
GO
CREATE TRIGGER trg_AfterUpdateMantenimiento 
ON MANTENIMIENTO
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    IF UPDATE(ID_ESTADO)
    BEGIN
        UPDATE PRODUCTO
        SET ID_ESTADO = I.ID_ESTADO -- El estado del producto se actualiza al nuevo estado del mantenimiento
        FROM PRODUCTO P
        INNER JOIN inserted I ON P.NUM_SERIE = I.ID_PRODUCTO
    END
END;
GO
CREATE TRIGGER trg_AfterDeleteMantenimiento 
ON MANTENIMIENTO
AFTER DELETE
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE PRODUCTO
    SET ID_ESTADO = 1 -- Disponible
    FROM PRODUCTO P
    INNER JOIN deleted D ON P.NUM_SERIE = D.ID_PRODUCTO
END;
-----arriendo-----
GO 
CREATE TRIGGER trg_AfterInsertArriendo 
ON ARRIENDO
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    IF EXISTS (SELECT * FROM inserted WHERE ID_ESTADO = 1)
    BEGIN
        UPDATE PRODUCTO
        SET ID_ESTADO = 3 -- En Obra
        FROM PRODUCTO P
        INNER JOIN inserted I ON P.NUM_SERIE = I.ID_PRODUCTO
    END
END;
GO
CREATE TRIGGER trg_AfterDeleteArriendo 
ON ARRIENDO
AFTER DELETE
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE PRODUCTO
    SET ID_ESTADO = 1 -- Disponible
    FROM PRODUCTO P
    INNER JOIN deleted D ON P.NUM_SERIE = D.ID_PRODUCTO
END;

-----DEVOLUCION----
GO
CREATE TRIGGER trg_AfterInsertDevolucion 
ON DEVOLUCION
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE PRODUCTO
    SET ID_ESTADO = 1 -- Disponible
    FROM PRODUCTO P
    INNER JOIN ARRIENDO A ON P.NUM_SERIE = A.ID_PRODUCTO
    INNER JOIN inserted I ON A.ID = I.ID_ARRIENDO;
END;
GO
CREATE TRIGGER trg_AfterDeleteDevolucion 
ON DEVOLUCION
AFTER DELETE
AS
BEGIN
    SET NOCOUNT ON;

    -- Actualizar el estado del producto a 'En Obra' (asumiendo que el ID es 3 para 'En Obra')
    UPDATE PRODUCTO
    SET ID_ESTADO = 3 -- En Obra
    FROM PRODUCTO P
    INNER JOIN ARRIENDO A ON P.NUM_SERIE = A.ID_PRODUCTO
    INNER JOIN deleted D ON A.ID = D.ID_ARRIENDO;
END;

